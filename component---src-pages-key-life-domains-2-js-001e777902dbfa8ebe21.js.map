{"version":3,"file":"component---src-pages-key-life-domains-2-js-001e777902dbfa8ebe21.js","mappings":"8KAkHA,UA7GwBA,KACtB,MAAM,EAACC,EAAQ,EAACC,IAAcC,EAAAA,EAAAA,UAAS,CACrC,CAAEC,GAAI,IAAKC,QAAS,aACpB,CAAED,GAAI,IAAKC,QAAS,wBACpB,CAAED,GAAI,IAAKC,QAAS,mBACpB,CAAED,GAAI,IAAKC,QAAS,oBACpB,CAAED,GAAI,IAAKC,QAAS,aACpB,CAAED,GAAI,IAAKC,QAAS,sBACpB,CAAED,GAAI,IAAKC,QAAS,aAGhB,EAACC,EAAU,EAACC,IAAgBJ,EAAAA,EAAAA,WAAS,IACrC,EAACK,EAAa,EAACC,IAAmBN,EAAAA,EAAAA,UAAS,SAiB3CO,EAAqBA,KACzB,MAAMC,EAAeC,OAAOC,YAE5BJ,EAAmBE,EADG,GACN,KAAoC,EAWtD,OARAG,EAAAA,EAAAA,YAAU,KACRJ,IACAE,OAAOG,iBAAiB,SAAUL,GAC3B,KACLE,OAAOI,oBAAoB,SAAUN,EAAmB,IAEzD,IAGDO,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAA,UAAI,6BACJA,EAAAA,cAAA,SAAG,6FAEHA,EAAAA,cAACE,EAAAA,GAAe,CAACC,UAlCIC,IACvB,IAAKA,EAAOC,YAAa,OAEzB,MAAMC,EAAQC,MAAMC,KAAKxB,IAClByB,GAAiBH,EAAMI,OAAON,EAAOO,OAAOC,MAAO,GAC1DN,EAAMI,OAAON,EAAOC,YAAYO,MAAO,EAAGH,GAE1CxB,EAAWqB,EAAM,GA4BbN,EAAAA,cAACa,EAAAA,GAAS,CAACC,YAAY,YACnBC,GACAf,EAAAA,cAAA,MAAAgB,OAAAC,OAAA,GAASF,EAASG,eAAc,CAAEC,IAAKJ,EAASK,SAAUC,UAAU,sBACjErC,EAAQsC,KAAI,CAAAC,EAAkBX,KAAK,IAAtB,GAAEzB,EAAE,QAAEC,GAASmC,EAAA,OAC3BvB,EAAAA,cAACwB,EAAAA,GAAS,CAACC,IAAKtC,EAAIuC,YAAavC,EAAIyB,MAAOA,IACxCG,GACAf,EAAAA,cAAA,MAAAgB,OAAAC,OAAA,CACEE,IAAKJ,EAASK,UACVL,EAASY,eACTZ,EAASa,gBAAe,CAC5BP,UAAU,iBAETjC,IAGK,IAEb2B,EAASc,gBAKlB7B,EAAAA,cAAA,UAAQ8B,QA/CcC,KACxBzC,GAAa,GACbG,GAAoB,EA6CkB4B,UAAU,eAAc,oBAE3DhC,GACCW,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAOqB,UAAU,iBACfrB,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAAA,UAAI,iBAGRA,EAAAA,cAAA,aACGhB,EAAQgD,MAAM,EAAG,GAAGV,KAAI,CAACW,EAAQrB,IAChCZ,EAAAA,cAAA,MAAIyB,IAAKQ,EAAO9C,IACda,EAAAA,cAAA,UAAKY,EAAQ,GACbZ,EAAAA,cAAA,UAAKiC,EAAO7C,cAKpBY,EAAAA,cAAA,UACEkC,IAAI,oHACJC,MAAM,OACNC,OAAQ7C,EACR8C,YAAY,IACZC,aAAa,IACbC,YAAY,IACZC,MAAM,cACNC,MAAO,CAAEC,UAAWnD,IACrB,aAKE,C","sources":["webpack://gatsby-starter-default/./src/pages/key-life-domains-2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Layout from '../components/layout';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport '../styles/keyLifeDomains2.css';  // Ensure the path is correct\n\nconst KeyLifeDomains2 = () => {\n  const [domains, setDomains] = useState([\n    { id: '1', content: 'Financial' },\n    { id: '2', content: 'Social/Relationships' },\n    { id: '3', content: 'Physical Health' },\n    { id: '4', content: 'Mental/Emotional' },\n    { id: '5', content: 'Spiritual' },\n    { id: '6', content: 'Living Environment' },\n    { id: '7', content: 'Career' }\n  ]);\n\n  const [showTable, setShowTable] = useState(false);\n  const [iframeHeight, setIframeHeight] = useState('720px'); // Default height\n\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const items = Array.from(domains);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setDomains(items);\n  };\n\n  const handleButtonClick = () => {\n    setShowTable(true);\n    updateIframeHeight();\n  };\n\n  const updateIframeHeight = () => {\n    const screenHeight = window.innerHeight;\n    const iframePadding = 40; // Padding to account for margins and potential borders\n    setIframeHeight(`${screenHeight - iframePadding}px`);\n  };\n\n  useEffect(() => {\n    updateIframeHeight();\n    window.addEventListener('resize', updateIframeHeight);\n    return () => {\n      window.removeEventListener('resize', updateIframeHeight);\n    };\n  }, []);\n\n  return (\n    <Layout>\n      <h1>What's stressing you out?</h1>\n      <p>Clarity helps you put energy where it matters most. Drag and rank your highest stressors.</p>\n\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"domains\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef} className=\"domains-container\">\n              {domains.map(({ id, content }, index) => (\n                <Draggable key={id} draggableId={id} index={index}>\n                  {(provided) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      className=\"domain-block\"\n                    >\n                      {content}\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <button onClick={handleButtonClick} className=\"done-button\">That's my stress</button>\n\n      {showTable && (\n        <>\n          <table className=\"results-table\">\n            <thead>\n              <tr>\n                <th>Rank</th>\n                <th>Life Domain</th>\n              </tr>\n            </thead>\n            <tbody>\n              {domains.slice(0, 3).map((domain, index) => ( // Only show top 3 domains\n                <tr key={domain.id}>\n                  <td>{index + 1}</td>\n                  <td>{domain.content}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <iframe\n            src=\"https://docs.google.com/forms/d/e/1FAIpQLSemSuvy4c-sKXRU6zLZFdk9pwbd2UgOFjrVu-PXlZHVuRr18g/viewform?embedded=true\"\n            width=\"100%\"\n            height={iframeHeight}\n            frameBorder=\"0\"\n            marginHeight=\"0\"\n            marginWidth=\"0\"\n            title=\"Google Form\"\n            style={{ minHeight: iframeHeight }}\n          >\n            Loadingâ€¦\n          </iframe>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nexport default KeyLifeDomains2;\n"],"names":["KeyLifeDomains2","domains","setDomains","useState","id","content","showTable","setShowTable","iframeHeight","setIframeHeight","updateIframeHeight","screenHeight","window","innerHeight","useEffect","addEventListener","removeEventListener","React","Layout","DragDropContext","onDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","index","Droppable","droppableId","provided","Object","assign","droppableProps","ref","innerRef","className","map","_ref","Draggable","key","draggableId","draggableProps","dragHandleProps","placeholder","onClick","handleButtonClick","slice","domain","src","width","height","frameBorder","marginHeight","marginWidth","title","style","minHeight"],"sourceRoot":""}