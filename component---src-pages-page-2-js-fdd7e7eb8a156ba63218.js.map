{"version":3,"file":"component---src-pages-page-2-js-fdd7e7eb8a156ba63218.js","mappings":"6JAkCA,IA9BeA,IACbC,EAAAA,cAAA,UAAQC,UAAU,UAChBD,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KACPH,EAAAA,cAAA,OAAKI,IAAI,YAAYC,IAAI,YAAYJ,UAAU,UAEjDD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,IAAIF,UAAU,SAAQ,eAEjCD,EAAAA,cAAA,OAAKC,UAAU,Q,yDC8BnB,IArCeK,IAAmB,IAADC,EAAA,IAAjB,SAAEC,GAAUF,EAC1B,MAAMG,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEV,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACD,EAAAA,EAAM,CAACY,WAAiC,QAAtBJ,EAAAE,EAAKG,KAAKC,oBAAY,IAAAN,OAAA,EAAtBA,EAAwBO,QAAS,UACpDd,EAAAA,cAAA,OACEe,MAAO,CACLC,OAAQ,SACRC,SAAU,sBACVC,QAAS,uBAGXlB,EAAAA,cAAA,YAAOQ,GACPR,EAAAA,cAAA,UACEe,MAAO,CACLI,UAAW,iBACXC,SAAU,mBAEb,MACI,IAAIC,MAAOC,cAAc,gBAC3B,IACDtB,EAAAA,cAAA,KAAGuB,KAAK,4BAA2B,YAGtC,C,+CCMP,IAlCA,SAAYjB,GAAoC,IAADkB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEZ,EAAK,SAAEN,GAAUF,EAC3C,MAAM,KAAEM,IAASF,EAAAA,EAAAA,gBAAe,YAc1BiB,EAAkBD,GAAed,EAAKC,aAAaa,YACnDE,EAAgC,QAApBJ,EAAGZ,EAAKC,oBAAY,IAAAW,OAAA,EAAjBA,EAAmBV,MAExC,OACEd,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ4B,EAAe,GAAGd,OAAWc,IAAiBd,GACtDd,EAAAA,cAAA,QAAM6B,KAAK,cAAcC,QAASH,IAClC3B,EAAAA,cAAA,QAAM+B,SAAS,WAAWD,QAAShB,IACnCd,EAAAA,cAAA,QAAM+B,SAAS,iBAAiBD,QAASH,IACzC3B,EAAAA,cAAA,QAAM+B,SAAS,UAAUD,QAAQ,YACjC9B,EAAAA,cAAA,QAAM6B,KAAK,eAAeC,QAAQ,YAClC9B,EAAAA,cAAA,QAAM6B,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAb,EAAKC,oBAAY,IAAAY,OAAA,EAAjBA,EAAmBO,SAAU,KACnEhC,EAAAA,cAAA,QAAM6B,KAAK,gBAAgBC,QAAShB,IACpCd,EAAAA,cAAA,QAAM6B,KAAK,sBAAsBC,QAASH,IACzCnB,EAGP,C,6GCpCA,MAQayB,EAAOA,IAAMjC,EAAAA,cAACkC,EAAAA,EAAG,CAACpB,MAAM,aAErC,UAVmBqB,IACjBnC,EAAAA,cAACoC,EAAAA,EAAM,KACLpC,EAAAA,cAAA,UAAI,2BACJA,EAAAA,cAAA,SAAG,qBACHA,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAI,2B","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/page-2.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport '../styles/header.css';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"logo-container\">\n      <Link to=\"/\">\n        <img src=\"/tree.png\" alt=\"Tree Icon\" className=\"logo\" />\n      </Link>\n      <Link to=\"/\" className=\"title\">Life Focus</Link>\n    </div>\n    <nav className=\"nav\">\n    </nav>\n  </header>\n);\n\n// const Header = () => (\n//   <header className=\"header\">\n//     <div className=\"logo-container\">\n//       <Link to=\"/\">\n//         <img src=\"/tree.png\" alt=\"Tree Icon\" className=\"logo\" />\n//       </Link>\n//       <Link to=\"/\" className=\"title\">Overcome Midlife</Link>\n//     </div>\n//     <nav className=\"nav\">\n//       <Link to=\"/\">Home</Link>\n//       <Link to=\"/course\">The Course</Link>\n//       <Link to=\"/contact\">Reach Out</Link>\n//       <Link to=\"/try-for-free\" className=\"try-free\">Try for free</Link>\n//     </nav>\n//   </header>\n// );\n\nexport default Header;\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"Page two\" />\n\nexport default SecondPage\n"],"names":["Header","React","className","Link","to","src","alt","_ref","_data$site$siteMetada","children","data","useStaticQuery","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","SecondPage","Layout"],"sourceRoot":""}