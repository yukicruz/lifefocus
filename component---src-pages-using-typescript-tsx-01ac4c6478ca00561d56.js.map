{"version":3,"file":"component---src-pages-using-typescript-tsx-01ac4c6478ca00561d56.js","mappings":"2NAaA,MAgCaA,EAA0BA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+CCRX,IA9BeC,IACbb,EAAAA,cAAA,UAAQc,UAAU,UAChBd,EAAAA,cAAA,OAAKc,UAAU,kBACbd,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KACPZ,EAAAA,cAAA,OAAKe,IAAI,sBAAsBC,IAAI,YAAYF,UAAU,UAE3Dd,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,IAAIE,UAAU,SAAQ,eAEjCd,EAAAA,cAAA,OAAKc,UAAU,Q,yDC8BnB,IArCeX,IAAmB,IAADc,EAAA,IAAjB,SAAEC,GAAUf,EAC1B,MAAMC,GAAOe,EAAAA,EAAAA,gBAAe,cAU5B,OACEnB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACa,EAAAA,EAAM,CAACO,WAAiC,QAAtBH,EAAAb,EAAKI,KAAKa,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBf,QAAS,UACpDF,EAAAA,cAAA,OACEsB,MAAO,CACLC,OAAQ,SACRC,SAAU,sBACVC,QAAS,uBAGXzB,EAAAA,cAAA,YAAOkB,GACPlB,EAAAA,cAAA,UACEsB,MAAO,CACLI,UAAW,iBACXC,SAAU,mBAEb,MACI,IAAIC,MAAOC,cAAc,gBAC3B,IACD7B,EAAAA,cAAA,KAAGU,KAAK,4BAA2B,YAGtC,C,+CCMP,IAlCA,SAAYP,GAAoC,IAAD2B,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAE9B,EAAK,SAAEgB,GAAUf,EAC3C,MAAM,KAAEK,IAASW,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAexB,EAAKa,aAAaW,YACnDE,EAAgC,QAApBJ,EAAGtB,EAAKa,oBAAY,IAAAS,OAAA,EAAjBA,EAAmB5B,MAExC,OACEF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQkC,EAAe,GAAGhC,OAAWgC,IAAiBhC,GACtDF,EAAAA,cAAA,QAAMmC,KAAK,cAAcC,QAASH,IAClCjC,EAAAA,cAAA,QAAMqC,SAAS,WAAWD,QAASlC,IACnCF,EAAAA,cAAA,QAAMqC,SAAS,iBAAiBD,QAASH,IACzCjC,EAAAA,cAAA,QAAMqC,SAAS,UAAUD,QAAQ,YACjCpC,EAAAA,cAAA,QAAMmC,KAAK,eAAeC,QAAQ,YAClCpC,EAAAA,cAAA,QAAMmC,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAvB,EAAKa,oBAAY,IAAAU,OAAA,EAAjBA,EAAmBO,SAAU,KACnEtC,EAAAA,cAAA,QAAMmC,KAAK,gBAAgBC,QAASlC,IACpCF,EAAAA,cAAA,QAAMmC,KAAK,sBAAsBC,QAASH,IACzCf,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport '../styles/header.css';\n\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"logo-container\">\n      <Link to=\"/\">\n        <img src=\"/lifefocus/tree.png\" alt=\"Tree Icon\" className=\"logo\" />\n      </Link>\n      <Link to=\"/\" className=\"title\">Life Focus</Link>\n    </div>\n    <nav className=\"nav\">\n    </nav>\n  </header>\n);\n\n// const Header = () => (\n//   <header className=\"header\">\n//     <div className=\"logo-container\">\n//       <Link to=\"/\">\n//         <img src=\"/tree.png\" alt=\"Tree Icon\" className=\"logo\" />\n//       </Link>\n//       <Link to=\"/\" className=\"title\">Overcome Midlife</Link>\n//     </div>\n//     <nav className=\"nav\">\n//       <Link to=\"/\">Home</Link>\n//       <Link to=\"/course\">The Course</Link>\n//       <Link to=\"/contact\">Reach Out</Link>\n//       <Link to=\"/try-for-free\" className=\"try-free\">Try for free</Link>\n//     </nav>\n//   </header>\n// );\n\nexport default Header;\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","Header","className","src","alt","_data$site$siteMetada","children","useStaticQuery","siteTitle","siteMetadata","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}